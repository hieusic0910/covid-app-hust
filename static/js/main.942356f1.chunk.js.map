{"version":3,"sources":["logo.svg","biohazard.svg","CountCard.js","DataTable.js","HistoryChart.js","HistoryChartFilters.js","services.js","Dashboard.styles.js","Dashboard.js","Map.styles.js","Map.js","NotFound.js","SiteLinks.js","StatTotals.js","SiteNavigation.js","PageTemplate.js","App.js","useInterval.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","content","paddingLeft","paddingRight","paddingTop","paddingBottom","count","fontWeight","pos","marginBottom","root","backgroundColor","border","boxShadow","width","CountCard","children","countColor","prevCount","title","classes","Card","className","CardContent","Typography","component","style","color","variant","duration","end","formattingFn","number","numeral","format","start","theme","paper","spacing","visuallyHidden","clip","height","margin","overflow","padding","position","top","DataTable","bodyRows","elevation","headCells","initialOrder","initialOrderBy","useState","order","setOrder","orderBy","setOrderBy","page","setPage","pageSizes","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-label","aria-labelledby","size","DataTableHead","cells","onRequestSort","event","property","TableBody","_","slice","map","id","bodyRow","TableRow","hover","key","tabIndex","Object","keys","bodyCell","index","cellProps","scope","align","TableCell","isNaN","colSpan","TablePagination","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","rowsPerPageOptions","TableHead","label","sortDirection","TableSortLabel","active","direction","onClick","Moment","extendMoment","moment","crosshair","grey","minWidth","HistoryChart","endDate","history","startDate","crosshairValue","setCrosshairValue","dateRange","range","dates","filter","date","contains","onMouseLeave","tickFormat","x","tickLabelAngle","tickTotal","hideLine","y","animation","curve","data","valueOf","onNearestX","d","stroke","red","line","values","selectedDateColorOverride","createMuiTheme","overrides","MuiPickersDay","daySelected","formControl","breakpoints","up","marginRight","justifyContent","HistoryChartFilters","endDateFilter","minDate","setEndDateFilter","setStartDateFilter","startDateFilter","pickerProps","autoOk","disableToolbar","maxDateMessage","minDateMessage","ThemeProvider","Grid","container","utils","DateFnsUtils","FormControl","maxDate","subtract","onChange","KeyboardButtonProps","add","getCountries","a","axios","get","getGEOData","getTotals","getYesterdayTotals","params","yesterday","getHistory","lastdays","yesterdayColor","YesterdayDiffTooltip","withStyles","tooltip","shadows","marginLeft","Tooltip","useDashboardStyles","divider","fab","bottom","right","down","header","headerCard","headerCountTitle","historyChartContainer","historyChartTitle","numberContainer","marginTop","numbersGrid","pie","pieContainer","display","pieLegend","pieTitle","flexGrow","overflowY","sectionHeader","yesterdayContainer","yesterdayDiff","fontStyle","yesterdayIcon","Dashboard","totals","dateFilters","country","setCountry","setMinDate","useHistoryChartFilters","isXSBreakpoint","useMediaQuery","pageRef","useRef","isFabShown","setIsFabShown","countryTableBodyRows","setCountryTableBodyRows","setHistory","cases","deaths","recovered","yesterdayTotals","setYesterdayTotals","useEffect","_countryData","countryTableData","worldData","countryData","countryBodyRows","todayCases","_historyData","firstDate","_yesterdayData","renderedTotals","prevActive","yesterdayPercent","yellow","prevDeaths","green","prevRecovered","prevCases","ref","Container","fireOnRapidScroll","onEnter","onLeave","item","xs","sm","lg","alignItems","placement","fontSize","DashboardHeading","Zoom","in","Fab","current","scrollTo","offsetTop","Divider","clusterTypeBtnColors","borderColor","useMapStyles","clusterList","clusterListHeader","clusterListSubHeader","clusterListHeaderActive","clusterListHeaderDeaths","clusterListHeaderRecovered","clusterListItem","clusterListItemName","maxWidth","clusterListSwipeableDrawer","clusterTypeButtonGroup","left","transform","zIndex","drawer","clusterTypeButton","clusterTypeButtonEnabled","clusterTypeButtonShowList","clusterTypeButtonActive","clusterTypeButtonDeaths","clusterTypeButtonRecovered","popupStats","popupTitle","textAlign","Map","isMdBreakpoint","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","clusterData","setClusterData","currentCluster","setCurrentCluster","currentClusterColor","setCurrentClusterColor","isPopupOpen","setIsPopupOpen","popupData","setPopupData","setClusterList","isClusterListOpen","setIsClusterListOpen","sourceRef","filteredData","province","features","coordinates","state","stats","confirmed","numDeaths","numRecovered","isStatePresent","isCountryPresent","geometry","type","properties","parseFloat","name","list","_geoData","_flyToClickedPoint","transitionDuration","transitionEasing","d3","transitionInterpolator","FlyToInterpolator","clusterOpacity","clusterStrokeOpacity","clusterLayer","paint","source","clusterTypeButtons","clsx","isDisabled","text","dragRotate","interactiveLayerIds","mapStyle","mapboxApiAccessToken","process","maxZoom","hasOwnProperty","clickedPoint","onViewportChange","updatedViewport","anchor","onClose","tipSize","List","dense","ListItem","ButtonGroup","Button","disabled","clusterColor","updatedList","_onClusterTypeBtnClick","SwipeableDrawer","clusterListSwipeableDrawerContainer","onOpen","open","dataToShow","button","img","notFoundContainer","flexDirection","notFoundText","NotFound","alt","src","biohazard","linkColor","link","textDecoration","linkActive","blueGrey","linkIcon","SiteLinks","links","icon","isSiteLink","paths","to","path","dashboard","linkContent","ListItemIcon","ListItemText","primary","activeClassName","exact","Link","href","rel","countTitle","transitions","standard","transitionProperty","transitionTimingFunction","easing","easeInOut","opacity","totalsHide","StatTotals","pathname","useLocation","gutterBottom","drawerBgColor","drawerLogo","drawerPaper","transition","create","sharp","enteringScreen","whiteSpace","lastUpdated","flexShrink","SiteNavigation","isDrawerOpen","toggleDrawerHandler","lastUpdatedContent","updated","Hidden","mdUp","implementation","ModalProps","keepMounted","smDown","Drawer","logo","appBar","minHeight","menuButton","menuButtonHidden","toolbar","toolbarLogo","PageTemplate","siteNavigationProps","isMediumBreakpoint","setIsDrawerOpen","useSiteNavigation","CssBaseline","AppBar","Toolbar","IconButton","edge","App","affectedCountries","tests","setTotals","_getTotals","callback","delay","savedCallback","setInterval","clearInterval","useInterval","ReactGA","initialize","pageview","window","location","search","render","_props","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.942356f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4d9c7c17.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.ff349f18.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CountUp from 'react-countup';\nimport numeral from 'numeral';\n\nCountCard.propTypes = {\n  children: PropTypes.node,\n  count: PropTypes.number.isRequired,\n  countColor: PropTypes.oneOf([red[500], yellow[500], green[400], grey[100]]),\n  prevCount: PropTypes.number.isRequired,\n  title: PropTypes.node.isRequired,\n};\n\nconst useStyles = makeStyles({\n  content: {\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    paddingTop: '16px',\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  count: {\n    fontWeight: 'bold',\n  },\n  pos: {\n    marginBottom: '12px',\n  },\n  root: {\n    backgroundColor: 'transparent',\n    border: 0,\n    boxShadow: 'none',\n    width: '100%',\n    '&:first-child > *': {\n      paddingTop: 0,\n    },\n  },\n});\n\nexport default function CountCard({\n  children,\n  count,\n  countColor,\n  prevCount,\n  title,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        {title}\n\n        <Typography\n          className={classes.count}\n          component=\"h2\"\n          style={{ color: countColor }}\n          variant=\"h4\"\n        >\n          <CountUp\n            duration={1.5}\n            end={count}\n            formattingFn={number => numeral(number).format('0,0')}\n            start={prevCount}\n          />\n        </Typography>\n\n        {children}\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nDataTable.propTypes = {\n  bodyRows: PropTypes.arrayOf(PropTypes.object),\n  elevation: PropTypes.number,\n  headCells: PropTypes.arrayOf(PropTypes.object),\n  initialOrder: PropTypes.oneOf(['asc', 'desc']),\n  initialOrderBy: PropTypes.string,\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginBottom: theme.spacing(2),\n    width: '100%',\n  },\n  root: {\n    width: '100%',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function DataTable({\n  bodyRows,\n  elevation,\n  headCells,\n  initialOrder = 'asc',\n  initialOrderBy = '',\n}) {\n  const classes = useStyles();\n\n  const [order, setOrder] = useState(initialOrder);\n  const [orderBy, setOrderBy] = useState(initialOrderBy);\n  const [page, setPage] = useState(0);\n  const pageSizes = [10, 25, 50];\n  const [rowsPerPage, setRowsPerPage] = useState(pageSizes[0]);\n\n  const _requestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const _changePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const _changeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, bodyRows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper} elevation={elevation}>\n        <TableContainer>\n          <Table\n            aria-label=\"data table\"\n            aria-labelledby=\"tableTitle\"\n            size=\"big\"\n          >\n            <DataTableHead\n              cells={headCells}\n              classes={classes}\n              onRequestSort={_requestSort}\n              order={order}\n              orderBy={orderBy}\n            />\n            <TableBody>\n              {_.orderBy(bodyRows, [orderBy], [order])\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(({ id, ...bodyRow }) => {\n                  return (\n                    <TableRow hover key={id} tabIndex={-1}>\n                      {Object.keys(bodyRow).map((bodyCell, index) => {\n                        // Make the first cell in the row a 'th'\n                        const cellProps =\n                          index === 0\n                            ? { component: 'th', scope: 'row' }\n                            : { align: 'right' };\n\n                        return (\n                          <TableCell key={index} {...cellProps}>\n                            {/* If value is a number, format it */}\n                            {!isNaN(bodyRow[bodyCell])\n                              ? numeral(bodyRow[bodyCell]).format('0,0')\n                              : bodyRow[bodyCell]}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          component=\"nav\"\n          count={bodyRows.length}\n          onChangePage={_changePage}\n          onChangeRowsPerPage={_changeRowsPerPage}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={pageSizes}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nfunction DataTableHead({ cells, classes, onRequestSort, order, orderBy }) {\n  const _createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {cells.map(({ id, label }, index) => (\n          <TableCell\n            align={index === 0 ? 'left' : 'right'}\n            key={id}\n            sortDirection={orderBy === id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === id}\n              direction={orderBy === id ? order : 'asc'}\n              onClick={_createSortHandler(id)}\n            >\n              {label}\n              {orderBy === id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Crosshair,\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  XAxis,\n  YAxis,\n} from 'react-vis';\nimport moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport numeral from 'numeral';\n\nHistoryChart.propTypes = {\n  endDate: PropTypes.instanceOf(moment).isRequired,\n  height: PropTypes.number.isRequired,\n  history: PropTypes.object, // key is date, value is cases per date\n  startDate: PropTypes.instanceOf(moment).isRequired,\n};\n\nconst Moment = extendMoment(moment);\n\nconst useStyles = makeStyles(() => ({\n  crosshair: {\n    backgroundColor: grey[900],\n    color: grey[100],\n    minWidth: '150px',\n    padding: '8px 16px',\n  },\n}));\n\nexport default function HistoryChart({\n  endDate,\n  height,\n  history = {},\n  startDate,\n}) {\n  const classes = useStyles();\n\n  const [crosshairValue, setCrosshairValue] = useState(null);\n  const dateRange = Moment.range(startDate, endDate);\n  const dates = Object.keys(history).filter(date =>\n    dateRange.contains(moment(date)),\n  );\n\n  if (!dates.length) return null;\n\n  return (\n    <FlexibleWidthXYPlot\n      height={height}\n      onMouseLeave={() => {\n        setCrosshairValue(null);\n      }}\n    >\n      <HorizontalGridLines />\n      <XAxis\n        tickFormat={x => moment(x).format('MM/DD')}\n        tickLabelAngle={-45}\n        tickTotal={dates.length < 7 ? (dates.length >= 4 ? 2 : 0) : 5}\n      />\n      <YAxis\n        hideLine\n        tickFormat={y =>\n          y > 1000000 ? numeral(y).format('0.0a') : numeral(y).format('0a')\n        }\n        tickTotal={5}\n      />\n\n      <LineSeries\n        animation=\"stiff\"\n        curve=\"curveMonotoneX\"\n        data={dates.map(date => ({\n          x: moment(date).valueOf(),\n          y: history[date],\n        }))}\n        onNearestX={d => {\n          setCrosshairValue(d);\n        }}\n        stroke={red[500]}\n      />\n\n      {crosshairValue && (\n        <Crosshair\n          style={{ line: { backgroundColor: grey[500] } }}\n          values={[crosshairValue]}\n        >\n          <Paper className={classes.crosshair}>\n            <Typography component=\"p\" variant=\"body2\">\n              <strong>Số ca nhiễm</strong>:{' '}\n              {numeral(crosshairValue.y).format('0,0')}\n            </Typography>\n            <Typography component=\"p\" variant=\"body2\">\n              <strong>Ngày</strong>:{' '}\n              {moment(crosshairValue.x).format('DD/MM/YYYY')}\n            </Typography>\n          </Paper>\n        </Crosshair>\n      )}\n    </FlexibleWidthXYPlot>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport grey from '@material-ui/core/colors/grey';\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nHistoryChartFilters.propTypes = {\n  endDateFilter: PropTypes.instanceOf(moment).isRequired,\n  minDate: PropTypes.instanceOf(moment).isRequired,\n  setEndDateFilter: PropTypes.func.isRequired,\n  setStartDateFilter: PropTypes.func.isRequired,\n  startDateFilter: PropTypes.instanceOf(moment).isRequired,\n};\n\n// Override selected-day styling inside the datepicker\n// https://github.com/mui-org/material-ui-pickers/issues/393#issuecomment-591747961\nconst selectedDateColorOverride = createMuiTheme({\n  overrides: {\n    MuiPickersDay: {\n      daySelected: {\n        backgroundColor: grey[800],\n        color: grey[100],\n      },\n    },\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    width: '145px',\n\n    [theme.breakpoints.up('sm')]: {\n      width: '200px',\n      '&:first-child': {\n        marginRight: '32px',\n      },\n    },\n  },\n\n  root: {\n    justifyContent: 'space-around',\n    margin: '16px 0',\n    padding: '8px',\n    width: '100%',\n\n    [theme.breakpoints.up('sm')]: {\n      justifyContent: 'flex-start',\n      paddingLeft: '52px',\n    },\n  },\n}));\n\nexport const useHistoryChartFilters = () => {\n  const [country, setCountry] = useState([]);\n  const [startDateFilter, setStartDateFilter] = useState(moment('02/01/2020'));\n  const [endDateFilter, setEndDateFilter] = useState(\n    moment().subtract(1, 'days'),\n  );\n  const [minDate, setMinDate] = useState(startDateFilter);\n\n  return {\n    country,\n    endDateFilter,\n    minDate,\n    setCountry,\n    setEndDateFilter,\n    setMinDate,\n    setStartDateFilter,\n    startDateFilter,\n  };\n};\n\nexport default function HistoryChartFilters({\n  endDateFilter,\n  minDate,\n  setEndDateFilter,\n  setStartDateFilter,\n  startDateFilter,\n}) {\n  const classes = useStyles();\n\n  const pickerProps = {\n    autoOk: true,\n    disableToolbar: true,\n    format: 'dd/MM/yyyy',\n    margin: 'normal',\n    maxDateMessage: 'Cannot filter chart by this date.',\n    minDateMessage: 'Cannot filter chart by this date.',\n    variant: 'inline',\n  };\n\n  return (\n    <ThemeProvider theme={selectedDateColorOverride}>\n      <Grid className={classes.root} component=\"section\" container>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <FormControl className={classes.formControl}>\n            <KeyboardDatePicker\n              {...pickerProps}\n              label=\"Ngày bắt đầu\"\n              maxDate={moment(endDateFilter).subtract(1, 'days')}\n              minDate={minDate}\n              onChange={setStartDateFilter}\n              value={startDateFilter}\n              KeyboardButtonProps={{\n                'aria-label': 'change start date',\n              }}\n            />\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <KeyboardDatePicker\n              {...pickerProps}\n              label=\"Ngày kết thúc\"\n              maxDate={moment().subtract(1, 'days')}\n              minDate={moment(startDateFilter).add(1, 'days')}\n              onChange={setEndDateFilter}\n              value={endDateFilter}\n              KeyboardButtonProps={{\n                'aria-label': 'change end date',\n              }}\n            />\n          </FormControl>\n        </MuiPickersUtilsProvider>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","import axios from 'axios';\nimport moment from 'moment';\n\n// https://github.com/NovelCOVID/API\nexport const getCountries = async () =>\n  await axios.get('https://disease.sh/v2/countries');\n\nexport const getGEOData = async () =>\n  await axios.get('https://disease.sh/v2/jhucsse');\n\nexport const getTotals = async () =>\n  await axios.get('https://disease.sh/v2/all');\n\nexport const getYesterdayTotals = async () =>\n  await axios.get('https://disease.sh/v2/all', {\n    params: { yesterday: true },\n  });\n\nexport const getHistory = async () =>\n  await axios.get('https://disease.sh/v2/historical/all', {\n    params: { lastdays: 'all' },\n  });\n\nexport const getUSStates = async () =>\n  await axios.get('https://disease.sh/v2/states');\n\n// https://newsapi.org\nexport const getNews = async ({ page = 1 }) => {\n  const sources = [\n    'abc-news',\n    'abc-news-au',\n    'associated-press',\n    'axios',\n    'bbc-news',\n    'bleacher-report',\n    'bloomberg',\n    'business-insider',\n    'buzzfeed',\n    'cbc-news',\n    'cbs-news',\n    'cnbc',\n    'cnn',\n    'entertainment-weekly',\n    'espn',\n    'fortune',\n    'fox-news',\n    'google-news',\n    'nbc-news',\n    'the-washington-post',\n    'fox-sports',\n    'hacker-news',\n    'ign',\n    'mashable',\n    'msnbc',\n    'mtv-news',\n    'national-geographic',\n    'new-scientist',\n    'newsweek',\n    'nfl-news',\n    'reddit-r-all',\n    'techcrunch',\n    'talksport',\n    'techradar',\n    'the-american-conservative',\n    'the-globe-and-mail',\n    'the-hill',\n    'the-huffington-post',\n    'the-verge',\n    'the-wall-street-journal',\n    'the-washington-post',\n    'the-washington-times',\n    'time',\n    'usa-today',\n    'vice-news',\n    'wired',\n  ];\n\n  return await axios.get('https://newsapi.org/v2/top-headlines', {\n    params: {\n      apiKey: process.env.REACT_APP_NEWS_API_TOKEN,\n      from: moment().format('DD-MM-YYYY'),\n      page,\n      pageSize: 12,\n      q: 'COVID',\n      sortBy: 'publishedAt',\n      sources: sources.join(','),\n    },\n  });\n};\n","import grey from '@material-ui/core/colors/grey';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst yesterdayColor = grey[200];\n\nexport const YesterdayDiffTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: grey[50],\n    boxShadow: theme.shadows[5],\n    color: grey[900],\n    marginLeft: '4px',\n  },\n}))(Tooltip);\n\nexport const useDashboardStyles = makeStyles(theme => ({\n  divider: {\n    marginBottom: '16px',\n  },\n\n  fab: {\n    backgroundColor: grey[900],\n    color: grey[100],\n    bottom: '32px',\n    position: 'fixed',\n    right: '48px',\n    '&:hover': {\n      backgroundColor: grey[900],\n    },\n    [theme.breakpoints.down('sm')]: {\n      bottom: '72px',\n      right: '16px',\n    },\n  },\n\n  header: {\n    marginBottom: '48px',\n    [theme.breakpoints.up('sm')]: {\n      [theme.breakpoints.down('lg')]: {\n        justifyContent: 'space-around',\n      },\n    },\n  },\n\n  headerCard: {\n    backgroundColor: grey[900],\n    padding: '16px 8px',\n  },\n\n  headerCountTitle: {\n    color: grey[100],\n  },\n\n  historyChartContainer: {\n    padding: '12px',\n  },\n  historyChartTitle: {\n    paddingBottom: '4px',\n    paddingLeft: '36px',\n    paddingTop: '8px',\n  },\n\n  numberContainer: {\n    marginTop: '32px',\n    padding: '0 16px',\n  },\n  numbersGrid: {\n    marginBottom: '48px',\n  },\n\n  pie: {\n    [theme.breakpoints.down('sm')]: {\n      order: 0,\n    },\n  },\n\n  pieContainer: {\n    display: 'flex',\n    marginBottom: '32px',\n    justifyContent: 'center',\n  },\n\n  pieLegend: {\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '16px',\n      order: 1,\n\n      // Override react-vis inline style\n      width: '100% !important',\n    },\n  },\n\n  pieTitle: {\n    paddingBottom: '24px',\n  },\n\n  root: {\n    backgroundColor: grey[100],\n    flexGrow: 1,\n    height: '100vh',\n    overflowY: 'auto',\n    paddingBottom: '200px',\n    paddingTop: '16px',\n  },\n\n  sectionHeader: {\n    marginBottom: '12px',\n  },\n\n  yesterdayContainer: {\n    marginTop: '2px',\n  },\n  yesterdayDiff: {\n    color: yesterdayColor,\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n    marginRight: '8px',\n  },\n  yesterdayIcon: {\n    color: yesterdayColor,\n  },\n}));\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Paper from '@material-ui/core/Paper';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { Waypoint } from 'react-waypoint';\nimport CountCard from './CountCard';\nimport DataTable from './DataTable';\nimport HistoryChart from './HistoryChart';\nimport HistoryChartFilters, {\n  useHistoryChartFilters,\n} from './HistoryChartFilters';\n\nimport {\n  getCountries,\n  getHistory,\n  \n  getYesterdayTotals,\n} from './services';\nimport { useDashboardStyles, YesterdayDiffTooltip } from './Dashboard.styles';\n\nDashboard.propTypes = {\n  totals: PropTypes.shape({\n    active: PropTypes.number,\n    affectedCountries: PropTypes.number,\n    cases: PropTypes.number,\n    deaths: PropTypes.number,\n    prevActive: PropTypes.number,\n    prevCases: PropTypes.number,\n    prevDeaths: PropTypes.number,\n    prevRecovered: PropTypes.number,\n    recovered: PropTypes.number,\n    tests: PropTypes.number,\n  }).isRequired,\n};\n\nexport default function Dashboard({ totals }) {\n  const classes = useDashboardStyles();\n  const dateFilters = useHistoryChartFilters();\n\n  const isXSBreakpoint = useMediaQuery('(max-width: 600px)');\n\n  const pageRef = useRef(null);\n  const [isFabShown, setIsFabShown] = useState(false);\n\n  const [countryTableBodyRows, setCountryTableBodyRows] = useState([]);\n\n  const [history, setHistory] = useState({});\n\n  \n\n  const [yesterdayTotals, setYesterdayTotals] = useState({\n    active: totals.active,\n    cases: totals.cases,\n    deaths: totals.deaths,\n    recovered: totals.recovered,\n  });\n\n  // Get data for tables and charts when component mounts\n  useEffect(() => {\n    const _countryData = async () => {\n      const { data } = await getCountries();\n      let countryTableData = data;\n\n      // API keeps changing. Filter out first if it is World.\n      // eslint-disable-next-line\n      const [worldData, ...countryData] = data;\n      if (worldData.country === 'World') countryTableData = countryData;\n\n      const countryBodyRows = countryTableData.map(\n        ({ active, cases, country, deaths, recovered, todayCases }) => ({\n          id: country,\n          country,\n          active,\n          deaths,\n          recovered,\n          todayCases,\n          cases,\n        }),\n      );\n      setCountryTableBodyRows(countryBodyRows);\n    };\n\n    const _historyData = async () => {\n      const {\n        data: { cases },\n      } = await getHistory();\n\n      setHistory(cases);\n\n      const firstDate = moment(Object.keys(cases)[0]);\n      dateFilters.setMinDate(firstDate);\n      dateFilters.setStartDateFilter(firstDate);\n    };\n\n    \n\n    const _yesterdayData = async () => {\n      const { data } = await getYesterdayTotals();\n\n      setYesterdayTotals(data);\n    };\n\n    _countryData();\n    _historyData();\n    \n    _yesterdayData();\n  }, []); // eslint-disable-line\n\n  const _scrollToTop = () => {\n    pageRef.current.scrollTo(0, pageRef.current.offsetTop);\n  };\n\n  const countryTableHeadCells = [\n    { id: 'country', label: 'Quốc gia' },\n    {\n      id: 'active',\n      label: 'Số ca hiện tại',\n    },\n    { id: 'deaths', label: 'Tử vong' },\n    { id: 'recovered', label: 'Ca  hồi phục' },\n    { id: 'todayCases', label: 'Mới ghi nhận' },\n    { id: 'cases', label: 'Tổng số ca ghi nhận' },\n  ];\n \n\n  const renderedTotals = [\n    {\n      count: totals.active,\n      countColor: red[500],\n      id: 'dashboard-total--active',\n      prevCount: totals.prevActive,\n      title: 'Số ca hiện tại',\n      yesterdayDiff: totals.active - yesterdayTotals.active,\n      yesterdayPercent:\n        ((totals.active - yesterdayTotals.active) / totals.active) * 100,\n    },\n    {\n      count: totals.deaths,\n      countColor: yellow[500],\n      id: 'dashboard-total--deaths',\n      prevCount: totals.prevDeaths,\n      title: 'Tử vong',\n      yesterdayDiff: totals.deaths - yesterdayTotals.deaths,\n      yesterdayPercent:\n        ((totals.deaths - yesterdayTotals.deaths) / totals.deaths) * 100,\n    },\n    {\n      count: totals.recovered,\n      countColor: green[400],\n      id: 'dashboard-total--recovered',\n      prevCount: totals.prevRecovered,\n      title: 'Ca hồi phục',\n      yesterdayDiff: totals.recovered - yesterdayTotals.recovered,\n      yesterdayPercent:\n        ((totals.recovered - yesterdayTotals.recovered) / totals.recovered) *\n        100,\n    },\n    {\n      count: totals.cases,\n      countColor: grey[100],\n      id: 'dashboard-total--cases',\n      prevCount: totals.prevCases,\n      title: 'Tổng số ca ghi nhận',\n      yesterdayDiff: totals.cases - yesterdayTotals.cases,\n      yesterdayPercent:\n        ((totals.cases - yesterdayTotals.cases) / totals.cases) * 100,\n    },\n  ];\n\n  return (\n    <article className={classes.root} ref={pageRef}>\n      <Container>\n        <Grid container spacing={3}>\n          {/* Header */}\n          <Waypoint\n            fireOnRapidScroll\n            onEnter={() => {\n              setIsFabShown(false);\n            }}\n            onLeave={() => {\n              setIsFabShown(true);\n            }}\n          >\n            <Grid\n              className={classes.header}\n              component=\"header\"\n              container\n              item\n              spacing={2}\n            >\n              {renderedTotals.map(\n                ({ id, title, yesterdayDiff, yesterdayPercent, ...data }) => (\n                  <Grid item key={id} xs={12} sm={5} lg={3}>\n                    <Paper className={classes.headerCard} elevation={2}>\n                      <CountCard\n                        title={\n                          <Typography className={classes.headerCountTitle}>\n                            {title}\n                          </Typography>\n                        }\n                        {...data}\n                      >\n                        <Grid\n                          alignItems=\"center\"\n                          className={classes.yesterdayContainer}\n                          container\n                        >\n                          <YesterdayDiffTooltip\n                            placement=\"right-start\"\n                            title={`${numeral(yesterdayDiff).format(\n                              '0,0',\n                            )} newly confirmed cases`}\n                          >\n                            <Typography\n                              className={classes.yesterdayDiff}\n                              component=\"p\"\n                              variant=\"body2\"\n                            >\n                              {`${yesterdayPercent > 0 ? '+' : ' '}${numeral(\n                                yesterdayDiff,\n                              ).format('0,0')} (${numeral(\n                                yesterdayPercent,\n                              ).format('0.00')}%)`}\n                            </Typography>\n                          </YesterdayDiffTooltip>\n\n                          {yesterdayPercent <= -0.5 && (\n                            <TrendingDownIcon\n                              className={classes.yesterdayIcon}\n                              fontSize=\"small\"\n                            />\n                          )}\n                          {yesterdayPercent > -0.5 &&\n                            yesterdayPercent < 0.5 && (\n                              <TrendingFlatIcon\n                                className={classes.yesterdayIcon}\n                                fontSize=\"small\"\n                              />\n                            )}\n                          {yesterdayPercent >= 0.5 && (\n                            <TrendingUpIcon\n                              className={classes.yesterdayIcon}\n                              fontSize=\"small\"\n                            />\n                          )}\n                        </Grid>\n                      </CountCard>\n                    </Paper>\n                  </Grid>\n                ),\n              )}\n            </Grid>\n          </Waypoint>\n\n          {/* Overview */}\n          <Grid component=\"section\" container item xs={12}>\n            <Grid item xs={12}>\n              <DashboardHeading>Tổng quan</DashboardHeading>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper>\n                <div className={classes.historyChartContainer}>\n                  <Typography className={classes.historyChartTitle}>\n                    Tổng số ca theo thời gian\n                  </Typography>\n                  <HistoryChart\n                    endDate={dateFilters.endDateFilter}\n                    height={isXSBreakpoint ? 250 : 500}\n                    history={history}\n                    startDate={dateFilters.startDateFilter}\n                  />\n                </div>\n                <HistoryChartFilters {...dateFilters} />\n                {/* \n                TODO: Add back once I figure out a better information architecture\n                <Grid className={classes.numbersGrid} container xs={12}>\n                  <Grid className={classes.numberContainer} item xs={6} md={4}>\n                    <DashboardNumber caption=\"Countries affected\">\n                      {totals.affectedCountries}\n                    </DashboardNumber>\n                  </Grid>\n\n                  <Grid className={classes.numberContainer} item xs={6} md={4}>\n                    <DashboardNumber\n                      caption=\"Mortality rate\"\n                      decimals={2}\n                      formattingFn={number => `${number}%`}\n                    >\n                      {(totals.deaths / totals.cases) * 100}\n                    </DashboardNumber>\n                  </Grid>\n\n                  <Grid className={classes.numberContainer} item xs={12} md={4}>\n                    <DashboardNumber\n                      caption=\"Tests administered\"\n                      decimals={2}\n                      formattingFn={number => numeral(number).format('0,0')}\n                    >\n                      {totals.tests}\n                    </DashboardNumber>\n                  </Grid>\n                </Grid> */}\n\n                {/* Country overview table */}\n                <DataTable\n                  bodyRows={countryTableBodyRows}\n                  headCells={countryTableHeadCells}\n                  elevation={0}\n                  initialOrder=\"desc\"\n                  initialOrderBy=\"active\"\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n\n          \n\n          {/* News Feed */}\n          {/* <Grid component=\"section\" item xs={12}>\n            <DashboardHeading>News Feed</DashboardHeading>\n            <News />\n          </Grid> */}\n        </Grid>\n      </Container>\n\n      <Zoom in={isFabShown}>\n        <Fab\n          aria-label=\"scroll back to top\"\n          className={classes.fab}\n          onClick={_scrollToTop}\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </Zoom>\n    </article>\n  );\n}\n\nfunction DashboardHeading({ children }) {\n  const classes = useDashboardStyles();\n\n  return (\n    <>\n      <Typography className={classes.sectionHeader} component=\"h2\" variant=\"h5\">\n        {children}\n      </Typography>\n      <Divider className={classes.divider} />\n    </>\n  );\n}\n\n// function DashboardNumber({\n//   caption,\n//   children: number,\n//   decimals = 0,\n//   formattingFn = undefined,\n// }) {\n//   const classes = useDashboardStyles();\n\n//   const [counterEnd, setCounterEnd] = useState(0);\n//   const [didCount, setDidCount] = useState(false);\n\n//   // Update count if number changes and count animation was already seen\n//   useEffect(() => {\n//     if (didCount && counterEnd !== number) setCounterEnd(number);\n//   }, [number]); // eslint-disable-line\n\n//   const _startCounter = () => {\n//     if (didCount) return;\n\n//     setCounterEnd(number);\n//     setDidCount(true);\n//   };\n\n//   return (\n//     <>\n//       <Waypoint onEnter={_startCounter} />\n//       <Typography align=\"center\" component=\"h3\" variant=\"h4\">\n//         <CountUp\n//           decimals={decimals}\n//           end={counterEnd}\n//           formattingFn={formattingFn}\n//           start={0}\n//         />\n//       </Typography>\n//       <Typography align=\"center\" component=\"p\" variant=\"body1\">\n//         {caption}\n//       </Typography>\n//     </>\n//   );\n// }\n","import green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst clusterTypeBtnColors = (color) => ({\n  color,\n  '&.Mui-disabled': {\n    backgroundColor: color,\n    borderColor: color,\n  },\n  '&.MuiButton-root:hover': {\n    backgroundColor: color,\n    borderColor: color,\n    color: grey[900],\n  },\n});\n\nexport const useMapStyles = makeStyles((theme) => ({\n  clusterList: {\n    color: grey[50],\n    height: '50vh',\n\n    [theme.breakpoints.up('md')]: {\n      height: 'auto',\n    },\n  },\n  clusterListHeader: {\n    fontWeight: 'bold',\n    marginBottom: 0,\n    marginTop: '32px',\n\n    [theme.breakpoints.up('md')]: {\n      marginTop: '100px',\n    },\n  },\n  clusterListSubHeader: {\n    marginBottom: '32px',\n  },\n  clusterListHeaderActive: {\n    color: red[500],\n  },\n  clusterListHeaderDeaths: {\n    color: yellow[500],\n  },\n  clusterListHeaderRecovered: {\n    color: green[400],\n  },\n  clusterListItem: {\n    display: 'flex',\n    fontSize: '16px',\n    justifyContent: 'space-between',\n    padding: '16px',\n  },\n  clusterListItemName: {\n    maxWidth: '75%',\n  },\n  clusterListSwipeableDrawer: {\n    backgroundColor: grey[900],\n\n    [theme.breakpoints.up('md')]: {\n      width: '370px',\n    },\n  },\n\n  clusterTypeButtonGroup: {\n    boxShadow: theme.shadows[6],\n    position: 'fixed',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    top: '32px',\n    width: 'fit-content',\n    zIndex: theme.zIndex.drawer + 101, // Show over backdrop from clusterList\n\n    [theme.breakpoints.up('sm')]: {\n      left: 'unset',\n      right: '32px',\n      transform: 'none',\n    },\n  },\n  clusterTypeButton: {\n    backgroundColor: '#191a1a',\n    color: grey[50],\n  },\n  clusterTypeButtonEnabled: {\n    '&.Mui-disabled': {\n      color: grey[900],\n    },\n  },\n  clusterTypeButtonShowList: {\n    '&.MuiButton-root:hover': {\n      backgroundColor: '#191a1a',\n    },\n  },\n  clusterTypeButtonActive: {\n    ...clusterTypeBtnColors(red[500]),\n  },\n  clusterTypeButtonDeaths: {\n    ...clusterTypeBtnColors(yellow[500]),\n  },\n  clusterTypeButtonRecovered: {\n    ...clusterTypeBtnColors(green[400]),\n  },\n\n  fab: {\n    backgroundColor: grey[700],\n    color: grey[100],\n    bottom: '32px',\n    position: 'fixed',\n    right: '48px',\n    '&:hover': {\n      backgroundColor: grey[700],\n    },\n    [theme.breakpoints.down('sm')]: {\n      bottom: '72px',\n      right: '16px',\n    },\n  },\n\n  popupStats: {\n    padding: 0,\n  },\n  popupTitle: {\n    margin: '8px 0',\n    textAlign: 'center',\n  },\n\n  // TODO: Figure out why styles aren't being overridden\n  // 'main .mapboxgl-popup-content': {\n  //   backgroundColor: 'transparent !important',\n  //   padding: '0 !important',\n  // },\n}));\n","import React, { useEffect, useRef, useState } from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport MapGL, { FlyToInterpolator, Layer, Popup, Source } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport SortIcon from '@material-ui/icons/Sort';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport yellow from '@material-ui/core/colors/yellow';\nimport clsx from 'clsx';\nimport * as d3 from 'd3-ease';\n\nimport { getGEOData } from './services';\nimport { useMapStyles } from './Map.styles';\n\nexport default function Map({ totals }) {\n  const classes = useMapStyles();\n  const isMdBreakpoint = useMediaQuery('(min-width: 960px)');\n\n  const [viewport, setViewport] = useState({\n    latitude: 30,\n    longitude: 100.5,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n  });\n  const [clusterData, setClusterData] = useState(null);\n  const [currentCluster, setCurrentCluster] = useState('active');\n  const [currentClusterColor, setCurrentClusterColor] = useState(red[500]);\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupData, setPopupData] = useState({});\n\n  const [clusterList, setClusterList] = useState([]);\n  const [isClusterListOpen, setIsClusterListOpen] = useState(false);\n\n  const sourceRef = useRef();\n\n  // Get GEO data when component mounts\n  useEffect(() => {\n    const _geoData = async () => {\n      const { data } = await getGEOData();\n\n      // Remove garbage data\n      const filteredData = data.filter(\n        ({ province }) => province !== 'Recovered',\n      );\n\n      const features = filteredData.map(\n        ({\n          coordinates: { latitude, longitude },\n          country,\n          province: state,\n          stats: { confirmed, deaths, recovered },\n        }) => {\n          const cases = parseInt(confirmed);\n          const numDeaths = parseInt(deaths);\n          const numRecovered = parseInt(recovered);\n\n          const isStatePresent = state && state !== 'null';\n          const isCountryPresent = country && country !== 'null';\n\n          return {\n            geometry: {\n              coordinates: [longitude, latitude],\n              type: 'Point',\n            },\n            properties: {\n              active: cases - numDeaths - numRecovered,\n              cases,\n              deaths: numDeaths,\n              latitude: parseFloat(latitude), // mapboxGL throws an error when this is a string\n              longitude: parseFloat(longitude), // mapboxGL throws an error when this is a string\n              name:\n                isStatePresent && isCountryPresent\n                  ? `${state}, ${country}`\n                  : country,\n              recovered: numRecovered,\n            },\n            type: 'Feature',\n          };\n        },\n      );\n\n      const list = _.orderBy(\n        features.map(({ properties }) => properties),\n        [currentCluster],\n        ['desc'],\n      );\n\n      setClusterList(list);\n      setClusterData({\n        features,\n        type: 'FeatureCollection',\n      });\n    };\n\n    _geoData();\n  }, []); // eslint-disable-line\n\n  const _onViewportChange = (updatedViewport) => setViewport(updatedViewport);\n\n  const _onClick = (event) => {\n    if (!(event.hasOwnProperty('features') && event.features[0])) return;\n\n    const clickedPoint = event.features[0];\n\n    const {\n      geometry: {\n        coordinates: [longitude, latitude],\n      },\n      properties: { active, deaths, name, recovered },\n    } = clickedPoint;\n\n    _flyToClickedPoint({\n      latitude,\n      longitude,\n    });\n\n    setPopupData({\n      latitude,\n      longitude,\n      name,\n      stats: {\n        active: numeral(active).format('0,0'),\n        deaths: numeral(deaths).format('0,0'),\n        recovered: numeral(recovered).format('0,0'),\n      },\n    });\n    setIsPopupOpen(true);\n  };\n\n  const _flyToClickedPoint = ({\n    latitude,\n    longitude,\n    transitionDuration = 1000,\n  }) => {\n    setViewport({\n      ...viewport,\n      latitude,\n      longitude,\n      transitionDuration,\n      transitionEasing: d3.easeCubic,\n      transitionInterpolator: new FlyToInterpolator(),\n      zoom: 5,\n    });\n  };\n\n  const _zoomOutMap = () => {\n    setViewport({\n      ...viewport,\n      transitionDuration: 1000,\n      transitionEasing: d3.easeCubic,\n      transitionInterpolator: new FlyToInterpolator(),\n      zoom: 0,\n    });\n  };\n\n  const _onClusterTypeBtnClick = (type) => {\n    let clusterColor;\n\n    switch (type) {\n      default:\n      case 'active':\n        clusterColor = red[500];\n        break;\n\n      case 'deaths':\n        clusterColor = yellow[500];\n        break;\n\n      case 'recovered':\n        clusterColor = green[400];\n        break;\n    }\n\n    const updatedList = _.orderBy(clusterList, [type], ['desc']);\n\n    setCurrentCluster(type);\n    setCurrentClusterColor(clusterColor);\n    setClusterList(updatedList);\n  };\n\n  let clusterOpacity = 0,\n    clusterStrokeOpacity = 0;\n  const { zoom } = viewport;\n  if (zoom <= 1) clusterOpacity = 0.175;\n  else if (zoom > 1 && zoom <= 2) {\n    clusterOpacity = 0.3;\n    clusterStrokeOpacity = 0.5;\n  } else {\n    clusterOpacity = 0.6;\n    clusterStrokeOpacity = 1;\n  }\n\n  const clusterLayer = {\n    filter: ['all', ['has', currentCluster], ['>', currentCluster, 0]],\n    id: 'cluster-circle',\n    paint: {\n      'circle-color': currentClusterColor,\n      'circle-opacity': clusterOpacity,\n      'circle-radius': [\n        'step',\n        ['get', currentCluster],\n        2.5, // Base radius\n        10, // When active cases >= 50 && cases < 100, radius = 5\n        5,\n        50,\n        7.5,\n        100,\n        8,\n        500,\n        10,\n        1000,\n        12.5,\n        2500,\n        15,\n        5000, // When active cases >= 5000 && cases < 10000, radius = 17.5\n        16,\n        10000,\n        18,\n        25000,\n        20,\n        50000,\n        22,\n        75000,\n        24,\n        100000,\n        26,\n        150000,\n        28,\n        200000,\n        30,\n        250000,\n        32,\n        300000,\n        34,\n        350000,\n        36,\n      ],\n      'circle-stroke-color': currentClusterColor,\n      'circle-stroke-opacity': clusterStrokeOpacity,\n      'circle-stroke-width': 1,\n    },\n    source: 'cluster-circle',\n    type: 'circle',\n  };\n\n  const clusterTypeButtons = [\n    {\n      className: clsx(\n        classes.clusterTypeButton,\n        currentCluster === 'active' && classes.clusterTypeButtonEnabled,\n        classes.clusterTypeButtonActive,\n      ),\n      isDisabled: currentCluster === 'active',\n      text: 'Số ca hiện tại',\n      type: 'active',\n    },\n    {\n      className: clsx(\n        classes.clusterTypeButton,\n        currentCluster === 'deaths' && classes.clusterTypeButtonEnabled,\n        classes.clusterTypeButtonDeaths,\n      ),\n      isDisabled: currentCluster === 'deaths',\n      text: 'Tử vong',\n      type: 'deaths',\n    },\n    {\n      className: clsx(\n        classes.clusterTypeButton,\n        currentCluster === 'recovered' && classes.clusterTypeButtonEnabled,\n        classes.clusterTypeButtonRecovered,\n      ),\n      isDisabled: currentCluster === 'recovered',\n      text: 'Ca hồi phục',\n      type: 'recovered',\n    },\n  ];\n\n  return (\n    <>\n      <MapGL\n        {...viewport}\n        dragRotate={false}\n        height=\"100%\"\n        interactiveLayerIds={[clusterLayer.id]}\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_GL_API_TOKEN}\n        maxZoom={5}\n        onClick={_onClick}\n        onViewportChange={_onViewportChange}\n        width=\"100%\"\n      >\n        <Source data={clusterData} ref={sourceRef} type=\"geojson\">\n          <Layer {...clusterLayer} />\n        </Source>\n\n        {viewport.zoom > 4.5 && isPopupOpen && (\n          <Popup\n            anchor=\"bottom\"\n            latitude={popupData.latitude}\n            longitude={popupData.longitude}\n            onClose={() => {\n              setIsPopupOpen(false);\n            }}\n            tipSize={6}\n          >\n            <Typography className={classes.popupTitle} component=\"h6\">\n              {popupData.name}\n            </Typography>\n\n            <List className={classes.popupStats} dense>\n              <ListItem dense>\n                <strong>{`${popupData.stats.active} Số ca hiện tại`}</strong>\n              </ListItem>\n              <ListItem>\n                <strong>{`${popupData.stats.deaths} Tử vong`}</strong>\n              </ListItem>\n              <ListItem>\n                <strong>{`${popupData.stats.recovered} Hồi phục`}</strong>\n              </ListItem>\n            </List>\n          </Popup>\n        )}\n      </MapGL>\n\n      <ButtonGroup\n        aria-label=\"button group to display active cases, deaths, or recovered on the map\"\n        className={classes.clusterTypeButtonGroup}\n        size=\"small\"\n      >\n        <Button\n          aria-label=\"button to toggle a list of locations in descending order, by active cases, deaths, or recovered\"\n          className={clsx(\n            classes.clusterTypeButton,\n            isClusterListOpen && classes.clusterTypeButtonEnabled,\n            classes.clusterTypeButtonShowList,\n          )}\n          onClick={() => {\n            setIsClusterListOpen(!isClusterListOpen);\n          }}\n        >\n          <SortIcon fontSize=\"small\" />\n        </Button>\n\n        {clusterTypeButtons.map(({ className, isDisabled, text, type }) => (\n          <Button\n            className={className}\n            disabled={isDisabled}\n            key={type}\n            onClick={() => {\n              _onClusterTypeBtnClick(type);\n            }}\n          >\n            {text}\n          </Button>\n        ))}\n      </ButtonGroup>\n\n      <Zoom in={viewport.zoom > 4.5}>\n        <Fab\n          aria-label=\"zoom out map\"\n          className={classes.fab}\n          onClick={_zoomOutMap}\n        >\n          <ZoomOutMapIcon />\n        </Fab>\n      </Zoom>\n\n      <SwipeableDrawer\n        anchor={isMdBreakpoint ? 'right' : 'bottom'}\n        classes={{\n          paper: classes.clusterListSwipeableDrawer,\n        }}\n        className={classes.clusterListSwipeableDrawerContainer}\n        onClose={() => {\n          setIsClusterListOpen(false);\n        }}\n        onOpen={() => {\n          setIsClusterListOpen(true);\n        }}\n        open={isClusterListOpen}\n      >\n        <Typography\n          align=\"center\"\n          className={clsx(\n            classes.clusterListHeader,\n            currentCluster === 'active' && classes.clusterListHeaderActive,\n            currentCluster === 'deaths' && classes.clusterListHeaderDeaths,\n            currentCluster === 'recovered' &&\n              classes.clusterListHeaderRecovered,\n          )}\n          component=\"h3\"\n          variant=\"h3\"\n        >\n          {numeral(totals[currentCluster]).format('0,0')}\n        </Typography>\n        <Typography\n          align=\"center\"\n          className={clsx(\n            classes.clusterListSubHeader,\n            currentCluster === 'active' && classes.clusterListHeaderActive,\n            currentCluster === 'deaths' && classes.clusterListHeaderDeaths,\n            currentCluster === 'recovered' &&\n              classes.clusterListHeaderRecovered,\n          )}\n          component=\"h4\"\n          variant=\"h6\"\n        >\n          {currentCluster === 'active' && 'Active Cases'}\n          {currentCluster === 'deaths' && 'Deaths'}\n          {currentCluster === 'recovered' && 'Recoveries'}\n        </Typography>\n\n        <List className={classes.clusterList}>\n          {clusterList.map(\n            ({ active, deaths, latitude, longitude, name, recovered }) => {\n              let dataToShow;\n              switch (currentCluster) {\n                default:\n                case 'active':\n                  dataToShow = active;\n                  break;\n                case 'deaths':\n                  dataToShow = deaths;\n                  break;\n                case 'recovered':\n                  dataToShow = recovered;\n                  break;\n              }\n\n              return (\n                <ListItem\n                  button\n                  className={classes.clusterListItem}\n                  key={`${name}${active}${deaths}${recovered}`}\n                  onClick={() => {\n                    setIsClusterListOpen(false);\n\n                    setPopupData({\n                      latitude,\n                      longitude,\n                      name,\n                      stats: {\n                        active: numeral(active).format('0,0'),\n                        deaths: numeral(deaths).format('0,0'),\n                        recovered: numeral(recovered).format('0,0'),\n                      },\n                    });\n                    setIsPopupOpen(true);\n\n                    _flyToClickedPoint({\n                      latitude,\n                      longitude,\n                      transitionDuration: 2500,\n                    });\n                  }}\n                >\n                  <span className={classes.clusterListItemName}>{name}</span>\n                  <span>{numeral(dataToShow).format('0,0')}</span>\n                </ListItem>\n              );\n            },\n          )}\n        </List>\n      </SwipeableDrawer>\n    </>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport biohazard from './biohazard.svg';\n\nconst useStyles = makeStyles(() => ({\n  img: {\n    height: '200px',\n  },\n  notFoundContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  notFoundText: {\n    fontWeight: 'bold',\n    marginTop: '32px',\n  },\n  root: {\n    alignItems: 'center',\n    backgroundColor: grey[100],\n    display: 'flex',\n    flexGrow: 1,\n    height: '100vh',\n    justifyContent: 'center',\n    overflowY: 'auto',\n    paddingBottom: '16px',\n    paddingTop: '16px',\n  },\n}));\n\nexport default function NotFound() {\n  const classes = useStyles();\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.notFoundContainer}>\n        <img alt=\"Page not found\" className={classes.img} src={biohazard} />\n        <Typography\n          className={classes.notFoundText}\n          component=\"h1\"\n          variant=\"h3\"\n        >\n          NOT FOUND\n        </Typography>\n      </div>\n    </article>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PublicIcon from '@material-ui/icons/Public';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport grey from '@material-ui/core/colors/grey';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { paths } from './App';\n\nconst linkColor = grey[100];\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: linkColor,\n    display: 'block',\n    textDecoration: 'none',\n    '&:focus': {\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n\n  linkActive: {\n    backgroundColor: blueGrey[900],\n  },\n\n  linkIcon: {\n    color: linkColor,\n  },\n\n  root: {\n    padding: 0,\n  },\n}));\n\nexport default function SiteLinks() {\n  const classes = useStyles();\n\n  const links = [\n    {\n      icon: <PublicIcon className={classes.linkIcon} />,\n      isSiteLink: true,\n      text: paths.map.name,\n      to: paths.map.path,\n    },\n    {\n      icon: <DashboardIcon className={classes.linkIcon} />,\n      isSiteLink: true,\n      text: paths.dashboard.name,\n      to: paths.dashboard.path,\n    },\n    {\n      icon: <InfoIcon className={classes.linkIcon} />,\n      isSiteLink: false,\n      text: 'About',\n      to: 'https://hieutrandev.netlify.app/',\n    },\n  ];\n\n  return (\n    <List classes={{ root: classes.root }}>\n      {links.map(({ icon, isSiteLink, text, to }) => {\n        const linkContent = (\n          <ListItem button>\n            <ListItemIcon className={classes.linkIcon}>{icon}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        );\n\n        return isSiteLink ? (\n          <NavLink\n            activeClassName={classes.linkActive}\n            className={classes.link}\n            exact\n            key={to}\n            to={to}\n          >\n            {linkContent}\n          </NavLink>\n        ) : (\n          <Link\n            className={classes.link}\n            href={to}\n            key={to}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {linkContent}\n          </Link>\n        );\n      })}\n    </List>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { paths } from './App';\nimport CountCard from './CountCard';\n\nStatTotals.propTypes = {\n  totals: PropTypes.shape({\n    active: PropTypes.number,\n    cases: PropTypes.number,\n    deaths: PropTypes.number,\n    prevActive: PropTypes.number,\n    prevCases: PropTypes.number,\n    prevDeaths: PropTypes.number,\n    prevRecovered: PropTypes.number,\n    recovered: PropTypes.number,\n  }).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  countTitle: {\n    color: grey[200],\n    fontSize: '14px',\n    marginBottom: '-2px',\n  },\n\n  totals: {\n    marginTop: 'auto',\n  },\n\n  [theme.breakpoints.up('md')]: {\n    totals: {\n      transform: 'translateX(0)',\n      transitionDuration: theme.transitions.duration.standard,\n      transitionProperty: 'height, margin, transform, opacity',\n      transitionTimingFunction: theme.transitions.easing.easeInOut,\n      height: 'auto',\n      opacity: 1,\n      paddingLeft: '12px',\n    },\n\n    totalsHide: {\n      height: 0,\n      marginBottom: 0,\n      opacity: 0,\n      transform: 'translateX(-50px)',\n      transitionProperty: 'height, transform',\n    },\n  },\n}));\n\nexport default function StatTotals({ totals }) {\n  const classes = useStyles();\n\n  const renderedTotals = [\n    {\n      count: totals.active,\n      countColor: red[500],\n      id: 'total--active',\n      prevCount: totals.prevActive,\n      title: 'Số ca hiện tại',\n    },\n    {\n      count: totals.deaths,\n      countColor: yellow[500],\n      id: 'total--deaths',\n      prevCount: totals.prevDeaths,\n      title: 'Tử vong',\n    },\n    {\n      count: totals.recovered,\n      countColor: green[400],\n      id: 'total--recovered',\n      prevCount: totals.prevRecovered,\n      title: 'Hồi phục',\n    },\n    {\n      count: totals.cases,\n      countColor: grey[100],\n      id: 'total--cases',\n      prevCount: totals.prevCases,\n      title: 'Tổng số ca ',\n    },\n  ];\n  const { pathname } = useLocation();\n\n  return (\n    <section\n      className={clsx(\n        classes.totals,\n        pathname === paths.dashboard.path && classes.totalsHide,\n      )}\n    >\n      {renderedTotals.map(({ id, title, ...data }) => (\n        <CountCard\n          key={id}\n          title={\n            <Typography className={classes.countTitle} gutterBottom>\n              {title}\n            </Typography>\n          }\n          {...data}\n        />\n      ))}\n    </section>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport SiteLinks from './SiteLinks';\nimport StatTotals from './StatTotals';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Typography from '@material-ui/core/Typography';\nimport grey from '@material-ui/core/colors/grey';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nimport logo from './logo.svg';\n\nSiteNavigation.propTypes = {\n  isDrawerOpen: PropTypes.bool.isRequired,\n  toggleDrawerHandler: PropTypes.func.isRequired,\n  totals: PropTypes.shape({\n    active: PropTypes.number,\n    cases: PropTypes.number,\n    deaths: PropTypes.number,\n    prevActive: PropTypes.number,\n    prevCases: PropTypes.number,\n    prevDeaths: PropTypes.number,\n    prevRecovered: PropTypes.number,\n    recovered: PropTypes.number,\n  }).isRequired,\n};\n\nconst drawerBgColor = grey[900];\nconst drawerWidth = '240px';\nconst logoHeight = '24px';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    zIndex: `${theme.zIndex.drawer + 1000} !important`,\n  },\n\n  drawerLogo: {\n    height: logoHeight,\n    margin: '16px 0 32px 0',\n  },\n\n  drawerPaper: {\n    backgroundColor: drawerBgColor,\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'hidden',\n    padding: '16px 0',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    zIndex: theme.zIndex.drawer + 1001,\n  },\n\n  lastUpdated: {\n    color: grey[100],\n    fontSize: '12px',\n    marginTop: '24px',\n    paddingLeft: '16px',\n  },\n\n  root: {\n    [theme.breakpoints.up('md')]: {\n      flexShrink: 0,\n      width: drawerWidth,\n    },\n  },\n}));\n\nexport const useSiteNavigation = () => {\n  const isMediumBreakpoint = useMediaQuery('(min-width: 960px)');\n\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const _toggleDrawer = () => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  // Fix bug when user opens sidebar on a small screen and then enlarges the browser window\n  useEffect(() => {\n    isMediumBreakpoint && isDrawerOpen && setIsDrawerOpen(false);\n  }, [isDrawerOpen, isMediumBreakpoint, setIsDrawerOpen]);\n\n  return {\n    isDrawerOpen,\n    toggleDrawerHandler: _toggleDrawer,\n  };\n};\n\nexport default function SiteNavigation({\n  isDrawerOpen,\n  toggleDrawerHandler,\n  totals,\n}) {\n  const classes = useStyles();\n\n  const lastUpdatedContent = (\n    <Typography className={classes.lastUpdated}>\n      {totals.updated\n        ? `Cập nhần lần cuối: ${moment(totals.updated).format('DD/MM/YYYY')},\n                ${moment(totals.updated).format('h:mmA')}`\n        : 'Đang cập nhật'}\n    </Typography>\n  );\n\n  return (\n    <nav aria-label=\"site navigation\" className={classes.root}>\n      <Hidden mdUp implementation=\"css\">\n        <SwipeableDrawer\n          classes={{\n            paper: classes.drawerPaper,\n            root: classes.drawer,\n          }}\n          ModalProps={{\n            keepMounted: true, // Used for better performance on mobile\n          }}\n          onClose={toggleDrawerHandler}\n          onOpen={toggleDrawerHandler}\n          open={isDrawerOpen}\n          variant=\"temporary\"\n        >\n          <SiteLinks />\n          <StatTotals totals={totals} />\n          {lastUpdatedContent}\n        </SwipeableDrawer>\n      </Hidden>\n\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open\n          variant=\"permanent\"\n        >\n          <img alt=\"COVID-19\" className={classes.drawerLogo} src={logo} />\n          <SiteLinks />\n          <StatTotals totals={totals} />\n          {lastUpdatedContent}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport logo from './logo.svg';\nimport SiteNavigation, { useSiteNavigation } from './SiteNavigation';\n\nPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  totals: PropTypes.shape({\n    active: PropTypes.number,\n    cases: PropTypes.number,\n    deaths: PropTypes.number,\n    prevActive: PropTypes.number,\n    prevCases: PropTypes.number,\n    prevDeaths: PropTypes.number,\n    prevRecovered: PropTypes.number,\n    recovered: PropTypes.number,\n  }).isRequired,\n};\n\nconst appBarHeight = '60px';\nconst logoHeight = '24px';\n\nexport const useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: blueGrey[900],\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: appBarHeight,\n    position: 'fixed',\n    top: 'auto',\n  },\n\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'hidden',\n  },\n\n  menuButton: {\n    marginRight: '36px',\n  },\n\n  menuButtonHidden: {\n    display: 'none',\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  toolbar: {\n    paddingRight: 24, // Keep right padding when drawer closed\n  },\n\n  toolbarLogo: {\n    height: logoHeight,\n    marginLeft: 'auto',\n  },\n}));\n\nexport default function PageTemplate({ children, totals }) {\n  const classes = useStyles();\n  const siteNavigationProps = useSiteNavigation();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <Hidden mdUp>\n        <AppBar className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              aria-label=\"open drawer\"\n              className={clsx(\n                classes.menuButton,\n                siteNavigationProps.isDrawerOpen && classes.menuButtonHidden,\n              )}\n              color=\"inherit\"\n              edge=\"start\"\n              onClick={siteNavigationProps.toggleDrawerHandler}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <img alt=\"COVID-19\" className={classes.toolbarLogo} src={logo} />\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n\n      <SiteNavigation {...siteNavigationProps} totals={totals} />\n\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './Dashboard';\nimport Map from './Map';\nimport NotFound from './NotFound';\nimport PageTemplate from './PageTemplate';\nimport useInterval from 'useInterval';\nimport { getTotals } from './services';\n\nimport './App.css';\nimport '../node_modules/react-vis/dist/style.css';\n\nexport const paths = {\n  dashboard: {\n    name: 'Bảng thống kê',\n    path: '/dashboard',\n  },\n  map: {\n    name: 'Thế giới',\n    path: '/',\n  },\n};\n\nfunction App() {\n  const [totals, setTotals] = useState({\n    active: 0,\n    affectedCountries: 0,\n    cases: 0,\n    deaths: 0,\n    prevActive: 0,\n    prevCases: 0,\n    prevDeaths: 0,\n    prevRecovered: 0,\n    recovered: 0,\n    tests: 0,\n    updated: null,\n  });\n\n  const _getTotals = async () => {\n    const { data } = await getTotals();\n\n    setTotals({\n      prevActive: totals.active,\n      prevCases: totals.cases,\n      prevDeaths: totals.deaths,\n      prevRecovered: totals.recovered,\n      ...data,\n    });\n  };\n\n  // Get total data every 2 minutes\n  useInterval(_getTotals, 1000 * 60 * 2);\n\n  // On mount\n  useEffect(() => {\n    // Initialize Google Analytics\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID);\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    _getTotals();\n  }, []); // eslint-disable-line\n\n  return (\n    <Router>\n      <PageTemplate totals={totals}>\n        <Switch>\n          <Route\n            exact\n            path={paths.dashboard.path}\n            render={(_props) => <Dashboard totals={totals} />}\n          />\n          <Route\n            exact\n            path={paths.map.path}\n            render={(_props) => <Map totals={totals} />}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </PageTemplate>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect, useRef } from 'react';\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}